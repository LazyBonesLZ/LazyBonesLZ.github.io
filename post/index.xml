<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ColofulDark Blog</title>
    <link>http://blog.harddone.com/post/</link>
    <description>Recent content in Posts on ColofulDark Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 25 Apr 2019 11:13:24 +0800</lastBuildDate>
    
	<atom:link href="http://blog.harddone.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hugo&#43;Nginx： 利用webhook自动部署静态网站到远程CentOS服务器（三）</title>
      <link>http://blog.harddone.com/post/hugo_nginx_3/</link>
      <pubDate>Thu, 25 Apr 2019 11:13:24 +0800</pubDate>
      
      <guid>http://blog.harddone.com/post/hugo_nginx_3/</guid>
      <description>前篇提要 在上一篇中，我们主要介绍了服务器的环境安装。在本文中，我们将就具体的操作步骤加以说明并截图展示。 利用 Hugo 生成静态网站 1. 创建项目目录 在您本地合适的目录下创建一个空文件夹，命名为BlogTest, 为了方便之后的命令行演示，我们假设刚才创建的目录完整路径为： /xxx/xxx/xxx/BlogTest 2. 新建网站 打开终端执</description>
    </item>
    
    <item>
      <title>Hugo&#43;Nginx： 利用webhook自动部署静态网站到远程CentOS服务器（二）</title>
      <link>http://blog.harddone.com/post/hugo_nginx_2/</link>
      <pubDate>Thu, 25 Apr 2019 05:13:24 +0800</pubDate>
      
      <guid>http://blog.harddone.com/post/hugo_nginx_2/</guid>
      <description>前篇提要 在上一篇文章，我们详细记录了如何购买阿里云服务器的步骤和搭建博客网站的部分准备工作。本文将继续记录安装服务器环境的步骤。 服务器软件环境安装 1. 安装git sudo yum install git 2. 安装Nginx Nginx是一个高性能的web服务器软件。它是一个比apache更灵活和轻量级的程序。 第一步 - 安装</description>
    </item>
    
    <item>
      <title>Hugo&#43;Nginx： 利用webhook自动部署静态网站到远程CentOS服务器（一）</title>
      <link>http://blog.harddone.com/post/hugo_nginx_1/</link>
      <pubDate>Wed, 24 Apr 2019 11:13:24 +0800</pubDate>
      
      <guid>http://blog.harddone.com/post/hugo_nginx_1/</guid>
      <description>概述 最近心血来潮想捣腾一下服务器方面的东西，一冲动在阿里云买了一台小小云服务器(HongKong)(推荐链接)（5年，算下来真是比买一个国外的VPS划算得太多，关键是响应速度超级完美，看图），想来搭个博文网站练（zhuang)练(zhuang)手(bi)，也是不错的。 既然练练手，</description>
    </item>
    
    <item>
      <title>Kotlin 自定义带点击效果的Button</title>
      <link>http://blog.harddone.com/post/kotlin_custom_btn/</link>
      <pubDate>Fri, 19 Apr 2019 11:10:07 +0800</pubDate>
      
      <guid>http://blog.harddone.com/post/kotlin_custom_btn/</guid>
      <description>MainButton 自定义button，可以在xml中设置点击效果，但是如果每个button都要按下效果的话，重复添加xml文件烦不胜烦，所以自定义一个MainButton,设置好Button的颜色后，按下效果是对其背景色加深处理，达到点击的效果，感觉世界一下清爽了许多。 效果预览 使用说明 添加依赖 implemention</description>
    </item>
    
    <item>
      <title>Python执行Android adb 命令</title>
      <link>http://blog.harddone.com/post/python_adb/</link>
      <pubDate>Thu, 18 Apr 2019 10:12:15 +0800</pubDate>
      
      <guid>http://blog.harddone.com/post/python_adb/</guid>
      <description>说明 本文以具体的python脚本为例进行说明，两个脚本都是根据开发过程中的业务需求而开发，并不具备通用性。但是其核心代码都是通过python的api执行adb命令： //example cmd = &#39;adb shell&#39; os.system(cmd) 1.uninstall_clean_app.py 根据app bundle id 卸载应用，并且删除该应用在sdcard目录下生成的文件夹等。当前脚本中所删除的目录是写死</description>
    </item>
    
    <item>
      <title>Lua 方法重载</title>
      <link>http://blog.harddone.com/post/lua_override/</link>
      <pubDate>Thu, 18 Apr 2019 10:01:05 +0800</pubDate>
      
      <guid>http://blog.harddone.com/post/lua_override/</guid>
      <description>最近在更新一个Lua项目中，很多地方调用了同一个方法，想在不改动调用逻辑的情况下，如何不执行原来的方法逻辑，而执行新的方法逻辑呢？ 我们可以直接重载该方法，但是前提是必须在第一次调用该方法前就完成了重载。 请注意这种方式的前提：一定是要在该方法第一次被调用前完成你的重载，否则无效。 举</description>
    </item>
    
    <item>
      <title>Android Studio3.3.2 发布Kotlin项目到Jcenter</title>
      <link>http://blog.harddone.com/post/as_push_kotlin_jcenter/</link>
      <pubDate>Wed, 17 Apr 2019 11:42:49 +0800</pubDate>
      
      <guid>http://blog.harddone.com/post/as_push_kotlin_jcenter/</guid>
      <description>概述 纸上得来终觉浅。 一直以为发布AAR到jcenter是非常简单的事，跟发布到私有服务器nexus应该没太多差别。没想到自己动手做过才知道千万道坑。 本文将记录在Android Studio 3.3.2下，如何上传用kotlin开发的aar到jcenter服务器以及遇到的问题。参考来自这篇博文，</description>
    </item>
    
    <item>
      <title>Unity调用Android参数为数组的方法</title>
      <link>http://blog.harddone.com/post/unit_call_android_arr/</link>
      <pubDate>Wed, 11 Jul 2018 01:59:34 +0800</pubDate>
      
      <guid>http://blog.harddone.com/post/unit_call_android_arr/</guid>
      <description>Unity开发过程中，如果要调用Android端的java方法，恰巧该方法的参数是可变参数或者数组，使用unity的AndroidJavaObject提供的call方法直接传递c#数组，是需要对数组参数做一下处理。举例说明： java方法如下： public void addList(String... values){ } unity c#调用时，需要把传入的参</description>
    </item>
    
  </channel>
</rss>